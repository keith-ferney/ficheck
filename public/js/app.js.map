{"version":3,"sources":["app.js","financial-goals.js","financial-ratios.js","financial-sections.js","monthly-tracking.js","retirement-needs/annual-savings-required.js","retirement-needs/future-savings-investments.js","retirement-needs/retirement-goal.js","retirement-needs/savings-investments.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// remove fields or add datepicker (mm/dd/yyyy) - jquery UI\n// monthly tracking hide categories link\n// delete button on right side of category field (removes row)\n// reset button on monthly tracker, with are you sure dialog\n// stage for george\n","(function($){\n  $(function(){\n    // store the financialGoalsContainer\n    var financialGoalsContainer = $('.financial-goals');\n\n    // handler for the add tracking record control\n    financialGoalsContainer.on('click', 'a[href=#add]', function(e){\n      var goalWrapper = $(this).closest('.financial-goal-type');\n      var goals = goalWrapper.find('.body').last();\n      var template = goalWrapper.find('.template');\n      var newRecord = template.find('form').clone();\n\n      if(!goals.length) {\n        console.log('no goals for you');\n        goals = $('<div class=\"body\"/>');\n        template.before(goals);\n      }\n\n      newRecord.addClass('new');\n\n      goals.append(newRecord);\n\n      newRecord.find('input:visible').first().trigger('focus');\n\n      $(this).remove();\n\n      return false;\n    });\n  });\n}(jQuery));\n","(function($){\n  $(function(){\n    // store the financialGoalsContainer\n    var financialRatiosContainer = $('.financial-ratios');\n\n    $('.ficheck-section-type', financialRatiosContainer).on('change', 'input', function() {\n      var wrapper = $(this).closest('.ficheck-section-type');\n      var asset = wrapper.find('[name=asset]');\n      var liability = wrapper.find('[name=liability]');\n      var ratio = wrapper.find('[name=ratio]');\n      var result;\n\n      if(asset.val() && liability.val()) {\n        if(wrapper.hasClass('financial-ratio-type-basic-liquidity')) {\n          result = asset.val() / liability.val();\n        } else if(wrapper.hasClass('financial-ratio-type-debt-to-asset')) {\n          result = liability.val() / asset.val();\n        } else if(wrapper.hasClass('financial-ratio-type-debt-payment-to-income')) {\n          result = liability.val() / asset.val();\n        }\n      }\n\n      if(result) {\n        result = Math.round(result * 100) / 100;\n        ratio.val(result);\n      }\n    });\n\n  });\n}(jQuery));\n","(function($){\n  $(function(){\n    var ficheckSections = $('.ficheck-sections');\n\n    ficheckSections.on('click', 'a[href=#expand]', function(e){\n      $('.body,[href=#add]', ficheckSections).slideDown();\n\n      return false;\n    });\n\n    ficheckSections.on('click', 'a[href=#collapse]', function(e){\n      $('.body,[href=#add]', ficheckSections).slideUp();\n\n      return false;\n    });\n\n    ficheckSections.on('click', 'h2', function(e){\n      $('.body,[href=#add]', $(this).closest('.ficheck-section-type')).slideToggle();\n\n      return false;\n    });\n\n    var helpControls = $('.help-controls', ficheckSections).on('click', 'a', function(){\n      var ratioElement = $(this).closest('.financial-section-type');\n      var row = $(this).closest('.row');\n      var description = row.find('.description')\n\n      $('.help-controls .hide', row).removeClass('hide');\n      $(this).addClass('hide');\n\n      if($(this).attr('href').search('show')>=0) {\n        description.show();\n      } else {\n        description.hide();\n      }\n\n      return false;\n    });\n  });\n}(jQuery));\n","(function($){\n  // store the monthlyTrackingContainer\n  var monthlyTrackingContainer = $('.monthly-tracking')\n\n  // handler for the add tracking record control\n  // monthlyTrackingContainer.on('click', 'button.add', function(e){\n  //   var currentRecord = $(this).closest('form');\n  //   var newRecord = currentRecord.clone();\n  //\n  //   $(':input', newRecord).val('').removeAttr('disabled').closest('form').removeClass('changed');\n  //\n  //   currentRecord.after(newRecord);\n  //\n  //   newRecord.find('input:visible').first().trigger('focus');\n  //\n  //   return false;\n  // });\n\n  // disable in/out if other if filled in  (only one or the other should be active)\n  monthlyTrackingContainer.on('change', '[name=in],[name=out]', function(){\n    var form = $(this).closest('form');\n\n    var sibling = form.find('[name=in],[name=out]').not(this);\n\n    if($(this).val()) {\n      sibling.attr('disabled', true);\n    } else {\n      sibling.removeAttr('disabled');\n    }\n  }).find('[name=in],[name=out]').trigger('change');\n\n  // if an input changes and the form is valid, submit it via ajax\n  monthlyTrackingContainer.on('change', '.row:not(.new) input', function(){\n    var form = $(this).closest('form');\n\n    var changed = false;\n    $('input', form).each(function(){\n        changed = this.value != this.defaultValue;\n\n        return !changed; // return if at least one control has changed value\n    });\n\n    if(changed) {\n      form.addClass('changed');\n    }\n\n    if(form.hasClass('changed') && form.find('[name=date]').val() && (form.find('[name=in]').val() || form.find('[name=out]').val())) {\n      var form = $(this).closest('form');\n      var data = form.serialize();\n\n      $.ajax({\n        url: form.action,\n        data: data,\n        method: \"post\",\n        success: function() {\n          form.removeClass('changed');\n\n          if(form.hasClass('new')) {\n            form.removeClass('new');\n          }\n        }\n      });\n    }\n  });\n\n  // track the active form (show controls via css)\n  monthlyTrackingContainer.on('focus', 'form input', function() {\n    monthlyTrackingContainer.find('form').removeClass('active');\n\n    $(this).closest('form').addClass('active');\n  });\n}(jQuery));\n","\n(function($){\n  $(function(){\n    var retirementGoals = $('.retirement-needs-type-annual-savings-required');\n\n    $(retirementGoals).on('change', 'input', function() {\n        var wrapper = $(this).closest('.ficheck-section-type');\n\n        var enteredRetirmentGoal = (wrapper.find('[name=entered_retirment_goal]').val() || 0) / 1;\n        var enteredFutureValueOfSavingsAndInvestments = (wrapper.find('[name=entered_future_value_of_savings_and_investments]').val() || 0) / 1;\n        var additionalSavingsNeededForRetirementElement = wrapper.find('[name=additional_savings_needed_for_retirement]');\n\n        console.log(additionalSavingsNeededForRetirementElement);\n\n        var additionalSavingsNeededForRetirement = enteredRetirmentGoal - enteredFutureValueOfSavingsAndInvestments;\n        additionalSavingsNeededForRetirementElement.val(additionalSavingsNeededForRetirement);\n\n        var factor = $('[name=\"retirment_age_factor\"]', wrapper).val();\n        var goal = Math.round(additionalSavingsNeededForRetirement * factor * 100) / 100;\n\n        var additionAnnualSavingsRequired = $('[name=\"addition_annual_savings_required\"]', wrapper);\n        additionAnnualSavingsRequired.val(goal);\n    });\n\n    $(retirementGoals).on('change', 'select', function() {\n        var value = parseInt($(this).val(), 10);\n\n        var factor = $(':selected', this).data('factor') / 1;\n\n        var wrapper = $(this).closest('.row');\n        var factorElement = $('[name=\"entered_retirment_age_factor\"]', wrapper);\n\n        factorElement.val(factor).trigger('change');\n    });\n\n  });\n}(jQuery));\n","\n(function($){\n  $(function(){\n    var futureSavingsInvestments = $('.retirement-needs-type-future-savings-investments');\n\n    $(futureSavingsInvestments).on('change', 'input', function() {\n        var wrapper = $(this).closest('.ficheck-sections');\n        var currentValueSavingsAndInvestments = wrapper.find('[name=current_value_savings_and_investments]').val() / 1;\n\n        var factor = $('[name=\"retirment_years_factor\"]', wrapper).val();\n        var goal = Math.round(currentValueSavingsAndInvestments * factor * 100) / 100;\n\n        var futureValueSavingsAndInvestmentsElement = $('[name=\"future_value_of_savings_and_investments\"]', wrapper);\n        futureValueSavingsAndInvestmentsElement.val(goal);\n    });\n\n    $(futureSavingsInvestments).on('change', 'select', function() {\n        var factor = $(':selected', this).data('factor');\n\n        var wrapper = $(this).closest('.row');\n        var factorElement = $('[name=\"retirment_years_factor\"]', wrapper);\n\n        factorElement.val(factor).trigger('change');\n    });\n\n  });\n}(jQuery));\n","\n(function($){\n  $(function(){\n    var retirementGoals = $('.retirement-needs-type-retirement-goal');\n\n    $(retirementGoals).on('change', 'input', function() {\n        var wrapper = $(this).closest('.ficheck-section-type');\n\n        var annualIncome = (wrapper.find('[name=annual_income]').val() || 0) / 1;\n        var annualSsBenefit = (wrapper.find('[name=annual_ss_benefit]').val() || 0) / 1;\n        var annualEmployerBenefit = (wrapper.find('[name=annual_employer_benefit]').val() || 0) / 1;\n        var additionalAnnualIncomeRequiredElement = wrapper.find('[name=additional_annual_income_required]');\n\n        var additionalAnnualIncomeRequired = annualIncome - annualSsBenefit - annualEmployerBenefit;\n        additionalAnnualIncomeRequiredElement.val(additionalAnnualIncomeRequired);\n\n        var factor = $('[name=\"retirment_age_factor\"]', wrapper).val();\n        var goal = Math.round(additionalAnnualIncomeRequired * factor * 100) / 100;\n\n        var retirmentGoal = $('[name=\"retirment_goal\"]', wrapper);\n        retirmentGoal.val(goal);\n    });\n\n    $(retirementGoals).on('change', 'select', function() {\n        var value = parseInt($(this).val(), 10);\n\n        var factor = $(':selected', this).data('factor') / 1;\n\n        var wrapper = $(this).closest('.row');\n        var factorElement = $('[name=\"retirment_age_factor\"]', wrapper);\n\n        factorElement.val(factor).trigger('change');\n    });\n\n  });\n}(jQuery));\n","\n(function($){\n  $(function(){\n    var savingsInvestments = $('.retirement-needs-type-savings-investements');\n\n    $(savingsInvestments).on('change', 'input', function() {\n        var wrapper = $(this).closest('.ficheck-section-type');\n\n        var currentValueEmployeeRetirementSavings = (wrapper.find('[name=employee_retirment_savings]').val() || 0) / 1;\n        var currentValuePersonalRetirementSavings = (wrapper.find('[name=personal_retirment_savings]').val() || 0) / 1;\n        var currentValueInvestments = (wrapper.find('[name=investements_value]').val() || 0) / 1;\n        var currentValueSavingsAndInvestmentsElement = wrapper.find('[name=retirement_savings_and_investments]');\n\n        var currentValueSavingsAndInvestments = Math.round((currentValueEmployeeRetirementSavings + currentValuePersonalRetirementSavings + currentValueInvestments) * 100) / 100;\n        currentValueSavingsAndInvestmentsElement.val(currentValueSavingsAndInvestments);\n\n        wrapper.next('.ficheck-section-type').find('[name=\"retirment_years_factor\"]').trigger('change');\n    });\n  });\n}(jQuery));\n"],"sourceRoot":"/source/"}